#List of commands to be run by crux-test.pl
# Format is these fields separated by '='
#    test name             (printed to the output as a label for the command)
#    standard filename     (path to file with the expected output)
#    command               (command with options and args to be run)
#    ignore string         (regex to ignore for diff command, 're 1' 're 2'

# TESTS WITH NO INDEX

# Generate Peptides
generate_peptides_no_ops = good_results/standard_generate_peptides_no_ops.out = ../../../bin/crux-generate-peptides test.fasta 

generate_peptides_default = good_results/standard_generate_peptides_default.out = ../../../bin/crux-generate-peptides  --output-sequence T test.fasta 

generate_peptides_sort_mass_unique = good_results/standard_generate_peptides_mass.out = ../../../bin/crux-generate-peptides --parameter-file params/params_uniq --output-sequence T --cleavages all --missed-cleavages T --sort mass  test.fasta 

generate_peptides_sort_length_unique = good_results/standard_generate_peptides_length.out = ../../../bin/crux-generate-peptides --parameter-file params/params_uniq --output-sequence T --cleavages tryptic --missed-cleavages T --sort length test.fasta 

generate_peptides_sort_lexical_unique = good_results/standard_generate_peptides_lexical.out = ../../../bin/crux-generate-peptides --parameter-file params/params_uniq --output-sequence T --cleavages partial --missed-cleavages T --sort lexical test.fasta 

generate_peptides_change_minmax = good_results/standard_generate_peptides_change_minmax = ../../../bin/crux-generate-peptides --parameter-file params/many_changes --output-sequence T --max-length 20 test.fasta

# Get spectrum
get_ms2_spectrum = good_results/standard_get_ms2_spectrum.out = rm -f get_ms2_spectrum.out; ../../../bin/crux-get-ms2-spectrum 2 test.ms2 get_ms2_spectrum.out; cat get_ms2_spectrum.out 

get_ms2_spectrum_stats = good_results/standard_get_ms2_spectrum_stats.out = rm -f get_ms2_spectrum.out; ../../../bin/crux-get-ms2-spectrum --stats T 2 test.ms2 get_ms2_spectrum.out 

# Predict ion series
predict_ions_no_ops = good_results/standard_predict_ions_no_ops.out = ../../../bin/crux-predict-peptide-ions IAMASEQ 2

predict_ions_b_h2o = good_results/standard_predict_ions_b_h2o.out = ../../../bin/crux-predict-peptide-ions --primary_ions b --precursor_ions T --h2o 1 IAMASEQ 2 

predict_ions_y_nh3 = good_results/standard_predict_ions_y_nh3.out = ../../../bin/crux-predict-peptide-ions --primary_ions y  --nh3 1 IAMASEQ 2

predict_ions_by_flank_max_z1 = good_results/standard_predict_ions_by_flank_max_z1.out = ../../../bin/crux-predict-peptide-ions --primary_ions by --max-ion-charge 1 --flanking T IAMASEQ 3

# Search for matches and test sqt file
search_for_matches_default = good_results/standard_search_default.target.sqt = rm -rf target.sqt crux_match_target_test* crux_match_decoy*test* test_crux_index/; ../../../bin/crux-search-for-matches --parameter-file params/smoke_params2 --output-mode all test.ms2 test.fasta; cat target.sqt = 'Time'

# Analyze matches
#  Currently, analyze_matches does not work without an index

# Search for matches with all defaults, no sqt file to test so use analyze
search_for_matches_noops = good_results/empty_file = rm -rf target.sqt crux_match_target_test* crux_match_decoy*test*; ../../../bin/crux-search-for-matches test.ms2 test.fasta; = 'Time'

# Analyze matches to test default search, use no ops
#analyze_matches_no_ops_test_search = good_results/<insert file name> = ...

# TESTS WITH INDEX

# See that crux-generate-peptides works with an existing index
#generate_peptides_use_index_uniq = good_results/standard_generate_peptides_use_index_uniq.out = ../../../bin/crux-generate-peptides --parameter-file params/params_uniq --output-sequence T --use-index T --cleavages tryptic copy_test.fasta = '# PROTEIN DATABASE'

generate_peptides_use_existing_index = good_results/standard_generate_peptides_use_index.out = ../../../bin/crux-generate-peptides --parameter-file params/smoke_params2 --output-sequence T --use-index T --cleavages tryptic existing.fasta = '# PROTEIN DATABASE'

# See that crux-search-for-matches works with existing index
search_for_matches_default_existing_index = good_results/standard_search_default.target.sqt = rm -rf target.sqt crux_match_target_test* crux_match_decoy*test* ; ../../../bin/crux-search-for-matches --parameter-file params/smoke_params2 --output-mode sqt --use-index T test.ms2 existing.fasta; cat target.sqt = 'Time'

# See that match_analysis works with an existing index and existing results
# SEGFAULT
analyze_matches_existing_index = good_results/standard_match_search_analysis.out=  ../../../bin/crux-analyze-matches --parameter-file params/smoke_params2 good_results existing.fasta 

# Create index use crux-generate-peptides to test that it worked

create_index_default = good_results/standard_create_index_default.out = rm -rf test_crux_index; ../../../bin/crux-create-index test.fasta; cat test_crux_index/README test_crux_index/crux_index_map = 'time'

generate_peptides_test_index = good_results/standard_generate_peptides_use_index.out = ../../../bin/crux-generate-peptides --parameter-file params/smoke_params2 --output-sequence T --use-index T test.fasta = '# PROTEIN DATABASE'

create_index_uniq = good_results/standard_create_index_uniq.out = rm -rf test_crux_index; ../../../bin/crux-create-index --unique-peptides T test.fasta; cat test_crux_index/README test_crux_index/crux_index_map = 'time'

# use crux-generate-peptides to test that it worked
generate_peptides_test_index_uniq = good_results/standard_generate_peptides_use_index_uniq.out = ../../../bin/crux-generate-peptides --parameter-file params/params_uniq --output-sequence T --use-index T test.fasta

# Search for matches and test sqt file
# ???is this using the index?
search_for_matches_default_index = good_results/standard_search_default.target.sqt = rm -rf target.sqt crux_match_target_test* crux_match_decoy*test* ; ../../../bin/crux-search-for-matches --parameter-file params/smoke_params2 --output-mode all test.ms2 test.fasta; cat target.sqt = 'Time'

# Analyze matches using above index
# ERROR saying charge is corrupt in binary file (results or fasta?)
#analyze_matches_index = good_results/standard_analyze_index.out =  ../../../bin/crux-analyze-matches --parameter-file params/smoke_params2 . test.fasta 













# Obsolete?

#search_spectrum = standard_search_spectrum.out =  ../../../bin/search_spectrum --parameter-file smoke_params test.ms2 6 standard2.fasta  
#search_spectra = standard_search_spectra.out = ../../../bin/search_spectra --number-runs 7  --parameter-file smoke_params test.ms2 standard2.fasta  

#match_search_analysis = standard_match_search_analysis.out = ../../../bin/match_search --match-output-folder match_result --number-runs 6 --parameter-file smoke_params test.ms2 standard2.fasta 
